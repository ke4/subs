plugins {
    id "org.asciidoctor.convert" version "1.5.2"
}

apply plugin: 'java'
apply plugin: 'org.asciidoctor.convert'
apply plugin: 'application'
mainClassName = "uk.ac.ebi.subs.FrontendApplication"

def deployPath = "/homes/sub_adm/jar"

dependencies {
    compile project(':subs-repository')
    compile project(':subs-data-model')
    compile project(':subs-processing-model')
    compile project(':subs-messaging')

    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile 'org.springframework.data:spring-data-rest-hal-browser'
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("de.codecentric:spring-boot-admin-starter-client:1.4.3")

    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("com.google.code.gson:gson:2.7") //bug in spring boot, see https://github.com/spring-projects/spring-boot/issues/6502

    testCompile 'org.springframework.restdocs:spring-restdocs-mockmvc:1.1.2.RELEASE'
}

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    attributes 'snippets': snippetsDir
    sourceDir file('src/main/resources/docs')
    backends 'html5'
    inputs.dir snippetsDir
    dependsOn test
}

jar {
    dependsOn asciidoctor
    from ("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

ssh.settings {
    user = 'sub_adm'
}

if (project.hasProperty('sshKeyFile')) {
    ssh.settings.identity = new File(sshKeyFile)
}

if (project.hasProperty('sshPassphrase')) {
    ssh.settings.passphrase = sshPassphrase
}

remotes {
    dev {
        host = 'mac-subs-001.ebi.ac.uk'
    }
}

task deployJar(type: SshTask, dependsOn: 'build') {
    doLast {
        String deployDir = new String(deployPath);
        File jarDeployDir = new File(deployDir)
        ssh.run {
            session(remotes.dev) {
                println "Uploading jar $jar.archivePath.name to $jarDeployDir area on $remote"
                put(jar.archivePath.absolutePath, jarDeployDir.absolutePath)

            }
        }
    }
    ssh.settings {
        knownHosts = allowAnyHosts
    }

}